<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xml:lang="ja" xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>Redmine インストール</title>
    <link rel="stylesheet" href="../default.css" type="text/css" />
    <link rel="stylesheet" href="redmine.css" type="text/css" />
  </head>
  <body>
    <header>
      <h1>Redmineインストール</h1>
    </header>
    <hr />
    <section>
      <h1>環境構築編</h1>
      <section>
        <h1>作成される環境</h1>
        <table>
          <thead>
            <tr><th>ソフトウェア</th><th>バージョン</th></tr>
          </thead>
          <tbody>
            <tr><td>OS</td><td>CentOS 7.3</td></tr>
            <tr><td>Web Server</td><td>Apache 2.4.25(Railsの実行にはPassengerを使用)</td></tr>
            <tr><td>Version Control</td><td>Subversion 1.9.5</td></tr>
            <tr><td>Database</td><td>PostgreSQL 9.6.3</td></tr>
            <tr><td>Ruby</td><td>Ruby 2.3.4</td></tr>
            <tr><td>Redmine</td><td>Redmine 3.3.3</td></tr>
          </tbody>
        </table>
        <p>作成されるOSユーザー</p>
        <table>
          <thead>
            <tr><th>ユーザー名</th><th>説明</th></tr>
          </thead>
          <tbody>
            <tr><td>apache</td><td>Apache用</td></tr>
            <tr><td>postgres</td><td>PostgreSQL用</td></tr>
          </tbody>
        </table>
      </section>
      <section>
        <h1>CentOSの設定</h1>
        <section>
          <h1>SELinuxを無効にする</h1>
<pre><code>$ su
# cd /etc/sysconfig
# vi selinux</code></pre>
          <p><code>SELINUX=disabled</code>にする。</p>
<pre><code># exit
$ reboot</code></pre>
          <p>再起動後、無効になったことを確認する。</p>
<pre><code>$ getenforce
Disabled</code></pre>
          <p>となっていればオーケー。</p>
        </section>
        <section>
          <h1>firewallでhttpを許可する。</h1>
<pre><code>$ su
# firewall-cmd --zone=public --add-service=http --permanent
success
# firewall-cmd --reload
success</code></pre>
          <p>httpでのアクセスが許可されたか確認する。</p>
<pre><code>$ su
# firewall-cmd --zone=public --list-services
dhcpv6-client http ssh</code></pre>
        </section>
      </section>
      <section>
        <h1>必要なパッケージのインストール</h1>
        <section>
          <h1>開発ツール(Cコンパイラ等)をインストールする。</h1>
<pre><code>$ su
# yum install gcc-c++ perl lynx bzip2 patch
# yum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel libffi-devel pcre-devel systemd-devel gdbm-devel bison /* libxslt-devel libxml2-devel */
# yum install ImageMagick ImageMagick-devel ipa-pgothic-fonts</code></pre>
        </section>
      </section>
      <section>
        <h1>Apacheのインストール</h1>
        <section>
          <h1>aprのインストール</h1>
<pre><code>$ cd
$ curl -O http://ftp.jaist.ac.jp/pub/apache/apr/apr-1.5.2.tar.gz
$ su
# tar xvf apr-1.5.2.tar.gz --no-same-owner -C /usr/local/src
# cd /usr/local/src/apr-1.5.2
# ./configure
# make
# make install</code></pre>
        </section>
        <section>
          <h1>apr-utilのインストール</h1>
<pre><code>$ cd
$ curl -O http://ftp.jaist.ac.jp/pub/apache/apr/apr-util-1.5.4.tar.gz
$ su
# tar xvf apr-util-1.5.4.tar.gz --no-same-owner -C /usr/local/src
# cd /usr/local/src/apr-util-1.5.4
# ./configure --with-apr=/usr/local/apr
# make
# make install</code></pre>
        </section>
        <section>
          <h1>apacheのインストール</h1>
<pre><code>$ cd
$ curl -O http://ftp.jaist.ac.jp/pub/apache/httpd/httpd-2.4.25.tar.gz
$ su
# tar xvf httpd-2.4.25.tar.gz --no-same-owner -C /usr/local/src
# cd /usr/local/src/httpd-2.4.25
# ./configure --with-apr=/usr/local/apr --with-apr-util=/usr/local/apr
# make
# make install</code></pre>
        </section>
        <section>
          <h1><del>mod_auth_shadowのインストール</del></h1>
<pre><code>$ cd
$ curl -O https://svwh.dl.sourceforge.net/project/mod-auth-shadow/mod_auth_shadow2/2.3/mod_auth_shadow-2.3.tar.gz
$ su
# tar xvf mod_auth_shadow-2.3.tar.gz --no-same-owner -C /usr/local/src
# cd /usr/local/src/mod_auth_shadow_2.3</code></pre>
          <p>makefileの編集</p>
<pre><code>APXS = /usr/local/apache2/bin/apxs
INSTBINDIR = /usr/local/sbin</code></pre>
          <p>make</p>
<pre><code># make
# make install</code></pre>
        </section>
        <section>
          <h1>apacheの設定</h1>
<pre><code>$ su
# vi /usr/local/apache2/conf/httpd.conf</code></pre>
          <p>以下の内容で更新する。</p>
<pre><code>&lt;IfModule unixd_module&gt;
User apache
Group apache
&lt;/IfModule&gt;</code></pre>
          <p>ユーザを作成する。</p>
<pre><code>$ su
# useradd -M -s /sbin/nologin apache
# chown -R apache:apache /usr/local/apache2</code></pre>
          <p>自動起動の設定</p>
<pre><code>$ su
# vi /usr/lib/systemd/system/httpd.service または
# vi /usr/local/lib/systemd/system/httpd.service</code></pre>
          <p>以下の内容で作成する。</p>
<pre><code>[Unit]
Description=httpd-2.4.25 daemon
After=syslog.target network.target remote-fs.target nss-lookup.target

[Service]
Type=forking
ExecStart=/usr/local/apache2/bin/apachectl start
ExecReload=/usr/local/apache2/bin/apachectl restart
ExecStop=/usr/local/apache2/bin/apachectl stop

[Install]
WantedBy=multi-user.target</code></pre>
<pre><code># systemctl enable httpd
Created symlink from /etc/systemd/system/multi-user.target.wants/httpd.service to /usr/local/lib/systemd/system/httpd.service.</code></pre>
        </section>
      </section>
      <section>
        <h1>Subversionのインストール</h1>
        <section>
          <h1>sqliteのインストール</h1>
<pre><code>$ cd
$ curl -O http://www.sqlite.org/2017/sqlite-autoconf-3190100.tar.gz
$ su
# tar xvf sqlite-autoconf-3190100.tar.gz --no-same-owner -C /usr/local/src
# cd /usr/local/src/sqlite-autoconf-3190100
# ./configure
# make
# make install</code></pre>
        </section>
        <section>
          <h1>sconsのインストール</h1>
<pre><code>$ cd
$ curl -O https://nchc.dl.sourceforge.net/project/scons/scons/2.5.1/scons-2.5.1.tar.gz
$ su
# tar xvf scons-2.5.1.tar.gz --no-same-owner -C /usr/local/src
# cd /usr/local/src/scons-2.5.1
# python setup.py install</code></pre>
        </section>
        <section>
          <h1>serfのインストール</h1>
<pre><code>$ cd
$ curl -O http://archive.apache.org/dist/serf/serf-1.3.9.tar.bz2
$ su
# tar xjf serf-1.3.9.tar.bz2 --no-same-owner -C /usr/local/src
# cd /usr/local/src/serf-1.3.9
# scons APR=/usr/local/apr APU=/usr/local/apr OPENSSL=/usr/bin
# scons install</code></pre>
        </section>
        <section>
          <h1>subversionのインストール</h1>
<pre><code>$ cd
$ curl -O http://ftp.riken.jp/net/apache/subversion/subversion-1.9.5.tar.gz
$ su
# tar xvf subversion-1.9.5.tar.gz --no-same-owner -C /usr/local/src
# cd /usr/local/src/subversion-1.9.5
# ./configure --with-apr=/usr/local/apr --with-apr-util=/usr/local/apr --with-serf=/usr/local/ --with-apxs=/usr/local/apache2/bin/apxs
# make
# make install</code></pre>
        </section>
        <section>
          <h1>ApacheからSubversionが使用できるようにする(認証はdigestを使用する)。</h1>
          <p>設定ファイル svn.conf を作成する。</p>
<pre><code>$ su
# vi /usr/local/apache2/conf/extra/svn.conf</code></pre>
<pre><code>LoadModule dav_svn_module   /usr/local/libexec/mod_dav_svn.so
LoadModule authz_svn_module /usr/local/libexec/mod_authz_svn.so
&lt;Location /repos&gt;
    DAV svn
    SVNParentPath /var/lib/svn/repos
&lt;/Location&gt;
&lt;Location /repos/repo1&gt;
    AuthType Digest
    AuthName "Repo1"
    AuthUserFile       /var/lib/svn/repos/repo1/conf/passwd
    AuthzSVNAccessFile /var/lib/svn/repos/repo1/conf/authz
    Require valid-user
&lt;/Location&gt;</code></pre>
          <p>httpd.confにsvn.confを追記する</p>
<pre><code>$ su
# vi /usr/local/apache2/conf/httpd.conf</code></pre>
<pre><code>Include conf/extra/svn.conf</code></pre>
          <p>httpd.confのauth_digest_module, dav_moduleのコメントを外す</p>
<pre><code>#LoadModule auth_digest_module modules/mod_auth_digest.so
#LoadModule dav_module modules/mod_dav.so
↓
LoadModule auth_digest_module modules/mod_auth_digest.so
LoadModule dav_module modules/mod_dav.so</code></pre>
        </section>
      </section>
      <section>
        <h1>PostgreSQLのインストール</h1>
        <section>
          <h1>PostgreSQLをインストールする。</h1>
<pre><code>$ cd
$ curl -O https://ftp.postgresql.org/pub/source/v9.6.3/postgresql-9.6.3.tar.gz
$ su
# tar xvf postgresql-9.6.3.tar.gz --no-same-owner -C /usr/local/src
# cd /usr/local/src/postgresql-9.6.3
# ./configure --with-openssl --with-systemd
# make
# make install</code></pre>
        </section>
        <section>
          <h1>PostgreSQLの設定</h1>
          <p>ユーザを作成する。</p>
<pre><code>$ su
# useradd postgres
# passwd postgres</code></pre>
          <p>環境変数を設定する。</p>
<pre><code>$ su - postgres
vi .bash_profile</code></pre>
          <p>PATH に /usr/local/pgsql/bin を追加する。</p>
<pre><code>PATH=/usr/local/pgsql/bin:$PATH</code></pre>
          <p>データベースクラスタの新規作成</p>
<pre><code>$ su
# mkdir /var/lib/pgsql/data
# chown postgres:postgres /var/lib/pgsql/data
# su - postgres
$ initdb -D /var/lib/pgsql/data</code></pre>
          <p>自動起動の設定</p>
<pre><code>$ su
# vi /usr/lib/systemd/system/postgres.service または
# vi /usr/local/lib/systemd/system/postgres.service</code></pre>
          <p>以下の内容で作成する。</p>
<pre><code>[Unit]
Description=PostgreSQL database server

[Service]
Type=notify
User=postgres
ExecStart=/usr/local/pgsql/bin/postgres -D /var/lib/pgsql/data
ExecReload=/bin/kill -HUP $MAINPID
KillMode=mixed
KillSignal=SIGINT
TimeoutSec=0

[Install]
WantedBy=multi-user.target</code></pre>
<pre><code># systemctl enable postgres
Created symlink from /etc/systemd/system/multi-user.target.wants/postgres.service to /usr/local/lib/systemd/system/postgres.service.
# systemctl start postgres</code></pre>
        </section>
      </section>
      <section>
        <h1>Rubyのインストール</h1>
        <section>
          <h1>Rubyをインストールする。</h1>
<pre><code>$ cd
$ curl -O https://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.4.tar.gz
$ su
# tar xvf ruby-2.3.4.tar.gz --no-same-owner -C /usr/local/src
# cd /usr/local/src/ruby-2.3.4
# ./configure --disable-install-doc
# make
# make install</code></pre>
        </section>
        <section>
          <h1>bundlerをインストールする。</h1>
<pre><code>$ su
# gem install bundler --no-rdoc --no-ri</code></pre>
        </section>
        <section>
          <h1>Passengerをインストールする。</h1>
<pre><code>$ su
# gem install passenger --no-rdoc --no-ri</code></pre>
        </section>
        <section>
          <h1>PassengerのApache用モジュールをインストールする。</h1>
<pre><code>$ su
# passenger-install-apache2-module -a --apxs2-path /usr/local/apache2/bin/apxs --apr-config-path /usr/local/apr/bin/apr-1-config --languages ruby</code></pre>
        </section>
        <section>
          <h1>Apache用設定内容の確認</h1>
<pre><code>$ su
# passenger-install-apache2-module --snippet
LoadModule passenger_module /usr/local/lib/ruby/gems/2.3.0/gems/passenger-5.1.4/buildout/apache2/mod_passenger.so
&lt;IfModule mod_passenger.c&gt;
  PassengerRoot /usr/local/lib/ruby/gems/2.3.0/gems/passenger-5.1.4
  PassengerDefaultRuby /usr/local/bin/ruby
&lt;/IfModule&gt;</code></pre>
<pre><code># vi /usr/local/apache2/conf/extra/redmine.conf</code></pre>
<pre><code># Passengerの基本設定。
# passenger-install-apache2-module --snippet で表示された設定を記述。
# 環境によって設定値が異なるため以下の3行はそのまま転記せず、必ず
# passenger-install-apache2-module --snippet で表示されたものを使用すること。
#
LoadModule passenger_module /usr/local/lib/ruby/gems/2.3.0/gems/passenger-5.1.4/buildout/apache2/mod_passenger.so
&lt;IfModule mod_passenger.c&gt;
  PassengerRoot /usr/local/lib/ruby/gems/2.3.0/gems/passenger-5.1.4
  PassengerDefaultRuby /usr/local/bin/ruby
&lt;/IfModule&gt;

# 必要に応じてPassengerのチューニングのための設定を追加（任意）。
# 詳しくはPhusion Passenger users guide(https://www.phusionpassenger.com/library/config/apache/reference/)参照。
PassengerMaxPoolSize 20
PassengerMaxInstancesPerApp 4
PassengerPoolIdleTime 864000
PassengerStatThrottleRate 10

Header always unset "X-Powered-By"
Header always unset "X-Runtime"</code></pre>
<pre><code># vi /usr/local/apache2/conf/httpd.conf</code></pre>
<pre><code>Include conf/extra/redmine.conf</code></pre>
        </section>
      </section>
    </section>
    <section>
      <h1>Redmineのインストール</h1>
      <p>決めておくもの</p>
      <table>
        <thead>
          <tr><th>a</th><th>b</th></tr>
        </thead>
        <tbody>
          <tr><td>redmineアクセスのためのurl</td><td>/redmine_a</td></tr>
          <tr><td>redmineが使用するデータベース名</td><td>redmine_a_db</td></tr>
          <tr><td>redmineデータベースへのユーザー／パスワード</td><td>redmine_a_user/redmine_a_pass</td></tr>
          <tr><td>svnリポジトリルート</td><td>/var/lib/svn/repos</td></tr>
          <tr><td>svnリポジトリその1(とりあえず)</td><td>/var/lib/svn/repos/repo1</td></tr>
        </tbody>
      </table>
      <section>
        <h1>PostgreSQLの設定</h1>
        <p>RedmineからPostgreSQLに接続するための設定を追加</p>
<pre><code>$ su
# vi /var/lib/pgsql/data/pg_hba.conf</code></pre>
<pre><code># Put your actual configuration here
# ----------------------------------
#
# If you want to allow non-local connections, you need to add more
# "host" records.  In that case you will also need to make PostgreSQL
# listen on a non-local interface via the listen_addresses
# configuration parameter, or via the -i or -h command line switches.
host    redmine_a_db       redmine_a_user       127.0.0.1/32            md5
host    redmine_a_db       redmine_a_user       ::1/128                 md5</code></pre>
        <section>
          <h1>PostgreSQLにRedmine用ユーザーを作成</h1>
<pre><code>$ su - postgres
$ createuser -P redmine_a_user</code></pre>
        </section>
        <section>
          <h1>Redmine用データベースを作成</h1>
<pre><code>$ su - postgres
$ createdb -E UTF-8 -l ja_JP.UTF-8 -O redmine_a_user -T template0 redmine_a_db</code></pre>
        </section>
      </section>
      <section>
        <h1>Redmineのダウンロード</h1>
<pre><code>$ cd
$ curl -O http://www.redmine.org/releases/redmine-3.3.3.tar.gz
$ su
# tar xvf redmine-3.3.3.tar.gz --no-same-owner -C /usr/local/src
# mv /usr/local/src/redmine-3.3.3 /usr/local/redmine_a</code></pre>
      </section>
      <section>
        <h1>データベースへの接続設定</h1>
<pre><code>$ su
# vi /usr/local/redmine_a/config/database.yml</code></pre>
<pre><code>production:
  adapter: postgresql
  database: redmine_a_db
  host: localhost          ※ 127.0.0.1 でないとダメな場合がある？
  username: redmine_a_user
  password: "redmine_a_pass"
  encoding: utf8</code></pre>
      </section>
      <section>
        <h1>設定ファイル config/configuration.ymlの作成</h1>
<pre><code>$ su
# vi /usr/local/redmine_a/config/configuration.yml</code></pre>
<pre><code>production:
  email_delivery:
    delivery_method: :smtp
    smtp_settings:
      address: "localhost"
      port: 25
      domain: "example.com"

  rmagick_font_path: /usr/share/fonts/ipa-pgothic/ipagp.ttf</code></pre>
      </section>
      <section>
        <h1>gemパッケージのインストール</h1>
<pre><code>$ su
# cd /usr/local/redmine_a
# export PATH=$PATH:/usr/local/pgsql/bin
# gem uninstall nokogiri
# gem install nokogiri -- --use-system-libraries
# bundle config build.nokogiri --use-system-libraries
# bundle install --without development test --path vendor/bundle
Don't run Bundler as root. Bundler can ask for sudo if it is needed, and installing your bundle as root will break this application for all non-root users on this machine.</code></pre>
      </section>
      <section>
        <h1>Redmineの初期設定と初期データ登録</h1>
<pre><code>$ su
# cd /usr/local/redmine_a
# bundle exec rake generate_secret_token</code></pre>
<pre><code># RAILS_ENV=production bundle exec rake db:migrate</code></pre>
<pre><code># RAILS_ENV=production REDMINE_LANG=ja bundle exec rake redmine:load_default_data</code></pre>
      </section>
      <section>
        <h1>Apache上のPassengerでRedmineを実行するための設定</h1>
<pre><code>$ su
# chown -R apache:apache /usr/local/redmine_a</code></pre>
      </section>
      <section>
        <h1>Apacheへの設定追加およびApacheの再起動</h1>
<pre><code>$ su
# vi /usr/local/apache2/conf/extra/redmine.conf</code></pre>
<pre><code># Redmineの画像ファイル・CSSファイル等へのアクセスを許可する設定。
# Apache 2.4のデフォルトではサーバ上の全ファイルへのアクセスが禁止されている。
&lt;Directory "/usr/local/redmine_a/public"&gt;
  Require all granted
&lt;/Directory&gt;
RackBaseURI /redmine_a

Alias /redmine_a /usr/local/redmine_a/public
&lt;Location /redmine_a&gt;
  PassengerBaseURI /redmine_a
  PassengerAppRoot /usr/local/redmine_a
&lt;/Location&gt;</code></pre>
        <p>Apache再起動</p>
<pre><code># /usr/local/apache2/bin/apachectl configtest
# systemctl restart httpd</code></pre>
      </section>
    </section>
    <hr />
    <footer>
      <address>2017-09-10更新<br /><abbr title="Copyright">&#169;</abbr>2008, b_type. E-mail: b_type&#64;hotmail.co.jp</address>
    </footer>
  </body>
</html>
