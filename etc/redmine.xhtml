<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xml:lang="ja" xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>Redmine インストール</title>
    <link rel="stylesheet" href="../default.css" type="text/css" />
    <link rel="stylesheet" href="redmine.css" type="text/css" />
  </head>
  <body>
    <header>
      <h1>Redmineインストール</h1>
    </header>
    <hr />
    <section>
      <h1>環境構築編</h1>
      <section>
        <h1>作成される環境</h1>
        <table>
          <thead>
            <tr><th>ソフトウェア</th><th>バージョン</th></tr>
          </thead>
          <tbody>
            <tr><td>OS</td><td>CentOS 7.6.1810</td></tr>
            <tr><td>Web Server</td><td>Apache 2.4.39(Railsの実行にはPassengerを使用)</td></tr>
            <tr><td>Version Control</td><td>Subversion 1.12.0</td></tr>
            <tr><td>Version Control</td><td>Git 2.21.0</td></tr>
            <tr><td>Database</td><td>PostgreSQL 11.3</td></tr>
            <tr><td>Ruby</td><td>Ruby 2.6.3</td></tr>
            <tr><td>Redmine</td><td>Redmine 4.0.3</td></tr>
          </tbody>
        </table>
        <p>前バージョン<a href="redmine_2017-09-10.xhtml">redmine_2017-09-10</a>, <a href="redmine_2018-08-13.xhtml">redmine_2018-08-13</a></p>
        <p>作成されるOSユーザー</p>
        <table>
          <thead>
            <tr><th>ユーザー名</th><th>説明</th></tr>
          </thead>
          <tbody>
            <tr><td>apache</td><td>Apache用</td></tr>
            <tr><td>postgres</td><td>PostgreSQL用</td></tr>
          </tbody>
        </table>
      </section>
      <section>
        <h1>CentOSの設定</h1>
        <section>
          <h1>SELinuxを無効にする</h1>
<pre><code>$ su
# cd /etc/sysconfig
# vi selinux</code></pre>
          <p><code>SELINUX=disabled</code>にする。</p>
<pre><code># exit
$ reboot</code></pre>
          <p>再起動後、無効になったことを確認する。</p>
<pre><code>$ getenforce
Disabled</code></pre>
          <p>となっていればオーケー。</p>
        </section>
        <section>
          <h1>firewallでhttpを許可する。</h1>
<pre><code>$ su
# firewall-cmd --zone=public --add-service=http --permanent
success
# firewall-cmd --reload
success</code></pre>
          <p>httpでのアクセスが許可されたか確認する。</p>
<pre><code>$ su
# firewall-cmd --zone=public --list-services
dhcpv6-client http ssh</code></pre>
        </section>
      </section>
      <section>
        <h1>必要なパッケージのインストール</h1>
        <section>
          <h1>開発ツール(Cコンパイラ等)をインストールする。</h1>
<pre><code>$ su
# yum install gcc-c++ perl lynx flex bzip2 patch readline-devel zlib-devel curl-devel libyaml-devel libffi-devel expat-devel pcre-devel systemd-devel gdbm-devel bison ImageMagick ImageMagick-devel ipa-pgothic-fonts autoconf</code></pre>
        </section>
      </section>
      <section>
        <h1>OpenSSLのインストール</h1>
<pre><code>$ cd
$ curl -O https://www.openssl.org/source/openssl-1.1.1b.tar.gz
$ tar xf openssl-1.1.1b.tar.gz
$ su -c 'mv openssl-1.1.1b /usr/local/src'
$ cd /usr/local/src/openssl-1.1.1b
$ ./config
$ make
$ su -c 'make install'
$ su -c 'echo "/usr/local/lib64" > /etc/ld.so.conf.d/lib64.conf'
$ su -c 'ldconfig'</code></pre>
      </section>
      <section>
        <h1>Apacheのインストール</h1>
        <section>
          <h1>Apacheのインストール</h1>
<pre><code>$ cd
$ curl -O "http://ftp.jaist.ac.jp/pub/apache/{apr/apr-1.6.5.tar.gz,apr/apr-util-1.6.1.tar.gz,httpd/httpd-2.4.39.tar.gz}"
$ tar xf httpd-2.4.39.tar.gz
$ su -c 'mv httpd-2.4.39 /usr/local/src'

$ tar xf apr-1.6.5.tar.gz
$ mv apr-1.6.5 /usr/local/src/httpd-2.4.39/srclib/apr

$ tar xf apr-util-1.6.1.tar.gz
$ mv apr-util-1.6.1 /usr/local/src/httpd-2.4.39/srclib/apr-util

$ cd /usr/local/src/httpd-2.4.39
$ ./configure --with-included-apr --enable-so --enable-ssl --enable-rewrite --enable-headers --with-ssl=/usr/local/bin
$ make
$ su -c 'make install'</code></pre>
        </section>
        <section>
          <h1>apacheの設定</h1>
<pre><code>$ su
# vi /usr/local/apache2/conf/httpd.conf</code></pre>
          <p>以下の内容で更新する。</p>
<pre><code>&lt;IfModule unixd_module&gt;
User apache
Group apache
&lt;/IfModule&gt;</code></pre>
          <p>ユーザを作成する。</p>
<pre><code>$ su
# useradd -M -s /sbin/nologin apache
# chown -R apache:apache /usr/local/apache2</code></pre>
          <p>自動起動の設定</p>
<pre><code>$ su
# mkdir -p /usr/local/lib/systemd/system
# vi /usr/local/lib/systemd/system/httpd.service</code></pre>
          <p>以下の内容で作成する。</p>
<pre><code>[Unit]
Description=httpd-2.4.39 daemon
After=syslog.target network.target remote-fs.target nss-lookup.target

[Service]
Type=forking
ExecStart=/usr/local/apache2/bin/apachectl start
ExecReload=/usr/local/apache2/bin/apachectl restart
ExecStop=/usr/local/apache2/bin/apachectl stop

[Install]
WantedBy=multi-user.target</code></pre>
<pre><code># systemctl enable httpd
Created symlink from /etc/systemd/system/multi-user.target.wants/httpd.service to /usr/local/lib/systemd/system/httpd.service.</code></pre>
        </section>
      </section>
      <section>
        <h1>Subversionのインストール</h1>
        <section>
          <h1>sqliteのインストール</h1>
<pre><code>$ cd
$ curl -O https://www.sqlite.org/2019/sqlite-autoconf-3280000.tar.gz
$ tar xf sqlite-autoconf-3280000.tar.gz
$ su -c 'mv sqlite-autoconf-3280000 /usr/local/src'
$ cd /usr/local/src/sqlite-autoconf-3280000
$ ./configure
$ make
$ su -c 'make install'</code></pre>
        </section>
        <section>
          <h1>sconsのインストール</h1>
<pre><code>$ cd
$ curl -O https://jaist.dl.sourceforge.net/project/scons/scons/3.0.5/scons-3.0.5.tar.gz
$ tar xf scons-3.0.5.tar.gz
$ su -c 'mv scons-3.0.5 /usr/local/src'
$ cd /usr/local/src/scons-3.0.5
$ su -c 'python setup.py install'</code></pre>
        </section>
        <section>
          <h1>serfのインストール</h1>
<pre><code>$ cd
$ curl -O http://archive.apache.org/dist/serf/serf-1.3.9.tar.bz2
$ tar xjf serf-1.3.9.tar.bz2
$ su -c 'mv serf-1.3.9 /usr/local/src'
$ cd /usr/local/src/serf-1.3.9
$ scons APR=/usr/local/apache2 APU=/usr/local/apache2 OPENSSL=/usr/local/bin
$ su -c 'scons install'</code></pre>
        </section>
        <section>
          <h1>subversionのインストール</h1>
<pre><code>$ cd
$ curl -O http://ftp.riken.jp/net/apache/subversion/subversion-1.12.0.tar.gz
$ tar xf subversion-1.12.0.tar.gz
$ su -c 'mv subversion-1.12.0 /usr/local/src'
$ cd /usr/local/src/subversion-1.12.0
$ ./configure --with-apr=/usr/local/apache2 --with-apr-util=/usr/local/apache2 --with-serf=/usr/local --with-apxs=/usr/local/apache2/bin/apxs --with-lz4=internal --with-utf8proc=internal
$ make
$ su -c 'make install'</code></pre>
        </section>
        <section>
          <h1>リポジトリ作成</h1>
<pre><code>$ su
# mkdir -p /var/lib/svn/repos
# cd /var/lib/svn/repos
# svnadmin create repo1
# chown apache:apache repo1</code></pre>
        </section>
        <section>
          <h1>ApacheからSubversionが使用できるようにする(認証はdigestを使用する)。</h1>
          <p>設定ファイル svn.conf を作成する。</p>
<pre><code>$ su
# vi /usr/local/apache2/conf/extra/svn.conf</code></pre>
<pre><code>LoadModule dav_svn_module   /usr/local/libexec/mod_dav_svn.so
LoadModule authz_svn_module /usr/local/libexec/mod_authz_svn.so
&lt;Location /repos&gt;
    DAV svn
    SVNParentPath /var/lib/svn/repos
&lt;/Location&gt;
&lt;Location /repos/repo1&gt;
    AuthType Digest
    AuthName "Repo1"
    AuthUserFile       /var/lib/svn/repos/repo1/conf/passwd
    AuthzSVNAccessFile /var/lib/svn/repos/repo1/conf/authz
    Require valid-user
&lt;/Location&gt;</code></pre>
          <p>httpd.confにsvn.confを追記する</p>
<pre><code>$ su
# vi /usr/local/apache2/conf/httpd.conf</code></pre>
<pre><code>Include conf/extra/svn.conf</code></pre>
          <p>httpd.confのauth_digest_module, dav_moduleのコメントを外す</p>
<pre><code>#LoadModule auth_digest_module modules/mod_auth_digest.so
#LoadModule dav_module modules/mod_dav.so
↓
LoadModule auth_digest_module modules/mod_auth_digest.so
LoadModule dav_module modules/mod_dav.so</code></pre>
        </section>
      </section>
      <section>
        <h1>Gitのインストール</h1>
<pre><code>$ cd
$ curl https://codeload.github.com/git/git/tar.gz/v2.21.0 -o git-2.21.0.tar.gz
$ tar xf git-2.21.0.tar.gz
$ su -c 'mv git-2.21.0 /usr/local/src'
$ cd /usr/local/src/git-2.21.0
$ make configure
$ ./configure
$ make
$ su -c 'make install'</code></pre>
        <section>
          <h1>リポジトリ作成</h1>
<pre><code>$ su
# mkdir -p /var/lib/git/repos
# cd /var/lib/git/repos
# git init --bare --shared repo1.git
# chown apache:apache repo1.git</code></pre>
        </section>
        <section>
          <h1>ApacheからGitが使用できるようにする(認証はdigestを使用する)。</h1>
          <p>設定ファイル git.conf を作成する。</p>
<pre><code>$ su
# vi /usr/local/apache2/conf/extra/git.conf</code></pre>
<pre><code>ScriptAlias /git/ /usr/lib/git-core/git-http-backend/
SetEnv GIT_PROJECT_ROOT /var/lib/git/repos
SetEnv GIT_HTTP_EXPORT_ALL

&lt;LocationMatch "^/git"&gt;
    AuthType Digest
    AuthName "git repository"
    Require valid-user
    AuthUserFile /var/lib/git/repos/htpasswd
&lt;/LocationMatch&gt;</code></pre>
          <p>httpd.confにgit.confを追記する</p>
<pre><code>$ su
# vi /usr/local/apache2/conf/httpd.conf</code></pre>
<pre><code>Include conf/extra/git.conf</code></pre>
        </section>
      </section>
      <section>
        <h1>PostgreSQLのインストール</h1>
        <section>
          <h1>PostgreSQLをインストールする。</h1>
<pre><code>$ cd
$ curl -O https://ftp.postgresql.org/pub/source/v11.3/postgresql-11.3.tar.gz
$ tar xf postgresql-11.3.tar.gz
$ su -c 'mv postgresql-11.3 /usr/local/src'
$ cd /usr/local/src/postgresql-11.3
$ ./configure --with-openssl --with-systemd
$ make
$ su -c 'make install'</code></pre>
        </section>
        <section>
          <h1>PostgreSQLの設定</h1>
          <p>ユーザを作成する。</p>
<pre><code>$ su
# useradd postgres
# passwd postgres</code></pre>
          <p>環境変数を設定する。</p>
<pre><code>$ su - postgres
vi .bash_profile</code></pre>
          <p>PATH に /usr/local/pgsql/bin を追加する。</p>
<pre><code>PATH=/usr/local/pgsql/bin:$PATH</code></pre>
          <p>データベースクラスタの新規作成</p>
<pre><code>$ su
# mkdir -p /var/lib/pgsql/data
# chown postgres:postgres /var/lib/pgsql/data
# su - postgres
$ initdb -D /var/lib/pgsql/data</code></pre>
          <p>自動起動の設定</p>
<pre><code>$ su
# vi /usr/lib/systemd/system/postgres.service または
# vi /usr/local/lib/systemd/system/postgres.service</code></pre>
          <p>以下の内容で作成する。</p>
<pre><code>[Unit]
Description=PostgreSQL database server

[Service]
Type=notify
User=postgres
ExecStart=/usr/local/pgsql/bin/postgres -D /var/lib/pgsql/data
ExecReload=/bin/kill -HUP $MAINPID
KillMode=mixed
KillSignal=SIGINT
TimeoutSec=0

[Install]
WantedBy=multi-user.target</code></pre>
<pre><code># systemctl enable postgres
Created symlink from /etc/systemd/system/multi-user.target.wants/postgres.service to /usr/local/lib/systemd/system/postgres.service.
# systemctl start postgres</code></pre>
        </section>
      </section>
      <section>
        <h1>Rubyのインストール</h1>
        <p>RubyとRedmine<br />
<a href="http://guide.redmine.jp/RedmineInstall/">http://guide.redmine.jp/RedmineInstall/</a><br />
<table>
<thead>
<tr><th>Redmineのバージョン</th><th>Rubyのバージョン</th><th>今回使用する組み合わせ</th></tr>
</thead>
<tbody>
<tr><td>4.0.x</td><td>2.2.2, 2.3, 2.4, 2.5, 2.6</td><td>←</td></tr>
<tr><td>3.4.x</td><td>1.9.3, 2.0.0, 2.1, 2.2, 2.3, 2.4</td><td>　</td></tr>
<tr><td>3.3.x</td><td>1.9.3, 2.0.0, 2.1, 2.2, 2.3</td><td>　</td></tr>
<tr><td>3.2.x</td><td>1.9.3, 2.0.0, 2.1, 2.2</td><td>　</td></tr>
</tbody>
</table>
Ruby安定版は2.6.3, 2.5.5</p>
        <section>
          <h1>Rubyをインストールする。</h1>
<pre><code>$ cd
$ curl -O https://cache.ruby-lang.org/pub/ruby/2.6/ruby-2.6.3.tar.gz
$ tar xf ruby-2.6.3.tar.gz
$ su -c 'mv ruby-2.6.3 /usr/local/src'
$ cd /usr/local/src/ruby-2.6.3
$ ./configure --disable-install-doc
$ make
$ su -c 'make install'</code></pre>
        </section>
        <section>
          <h1>bundlerをインストールする。</h1>
<pre><code>$ su
# gem install bundler</code></pre>
        </section>
        <section>
          <h1>Passengerをインストールする。</h1>
<pre><code>$ su
# gem install passenger</code></pre>
        </section>
        <section>
          <h1>PassengerのApache用モジュールをインストールする。</h1>
<pre><code>$ su
# passenger-install-apache2-module -a --apxs2-path /usr/local/apache2/bin/apxs --apr-config-path /usr/local/apache2/bin/apr-1-config --languages ruby</code></pre>
        </section>
        <section>
          <h1>Apache用設定内容の確認</h1>
<pre><code>$ su
# passenger-install-apache2-module --snippet
LoadModule passenger_module /usr/local/lib/ruby/gems/2.6.0/gems/passenger-6.0.2/buildout/apache2/mod_passenger.so
&lt;IfModule mod_passenger.c&gt;
  PassengerRoot /usr/local/lib/ruby/gems/2.6.0/gems/passenger-6.0.2
  PassengerDefaultRuby /usr/local/bin/ruby
&lt;/IfModule&gt;</code></pre>
<pre><code># vi /usr/local/apache2/conf/extra/passenger.conf</code></pre>
<pre><code># Passengerの基本設定。
# passenger-install-apache2-module --snippet で表示された設定を記述。
# 環境によって設定値が異なるため以下の3行はそのまま転記せず、必ず
# passenger-install-apache2-module --snippet で表示されたものを使用すること。
#
LoadModule passenger_module /usr/local/lib/ruby/gems/2.6.0/gems/passenger-6.0.2/buildout/apache2/mod_passenger.so
&lt;IfModule mod_passenger.c&gt;
  PassengerRoot /usr/local/lib/ruby/gems/2.6.0/gems/passenger-6.0.2
  PassengerDefaultRuby /usr/local/bin/ruby
&lt;/IfModule&gt;</code></pre>
<pre><code>chown apache:apache /usr/local/apache2/conf/extra/passenger.conf</code></pre>
<pre><code># vi /usr/local/apache2/conf/httpd.conf</code></pre>
<pre><code>Include conf/extra/passenger.conf</code></pre>
        </section>
      </section>
    </section>
    <section>
      <h1>Redmineのインストール</h1>
      <p>決めておくもの</p>
      <table>
        <thead>
          <tr><th>a</th><th>b</th></tr>
        </thead>
        <tbody>
          <tr><td>redmineアクセスのためのurl</td><td>/redmine_a</td></tr>
          <tr><td>redmineが使用するデータベース名</td><td>redmine_a_db</td></tr>
          <tr><td>redmineデータベースへのユーザー／パスワード</td><td>redmine_a_user/redmine_a_pass</td></tr>
          <tr><td>svnリポジトリルート</td><td>/var/lib/svn/repos</td></tr>
          <tr><td>svnリポジトリその1(とりあえず)</td><td>/var/lib/svn/repos/repo1</td></tr>
        </tbody>
      </table>
      <section>
        <h1>PostgreSQLの設定</h1>
        <p>RedmineからPostgreSQLに接続するための設定を追加</p>
<pre><code>$ su - postgres
$ vi /var/lib/pgsql/data/pg_hba.conf</code></pre>
<pre><code># Put your actual configuration here
# ----------------------------------
#
# If you want to allow non-local connections, you need to add more
# "host" records.  In that case you will also need to make PostgreSQL
# listen on a non-local interface via the listen_addresses
# configuration parameter, or via the -i or -h command line switches.
host    redmine_a_db       redmine_a_user       127.0.0.1/32            md5
host    redmine_a_db       redmine_a_user       ::1/128                 md5</code></pre>
        <section>
          <h1>PostgreSQLにRedmine用ユーザーを作成</h1>
<pre><code>$ su - postgres
$ createuser -P redmine_a_user</code></pre>
        </section>
        <section>
          <h1>Redmine用データベースを作成</h1>
<pre><code>$ su - postgres
$ createdb -E UTF-8 -l ja_JP.UTF-8 -O redmine_a_user -T template0 redmine_a_db</code></pre>
        </section>
      </section>
      <section>
        <h1>Redmineのダウンロード</h1>
<pre><code>$ cd
$ curl -O http://www.redmine.org/releases/redmine-4.0.3.tar.gz
$ tar xf redmine-4.0.3.tar.gz
$ su -c 'mv redmine-4.0.3 /var/lib/redmine_a'</code></pre>
      </section>
      <section>
        <h1>データベースへの接続設定</h1>
<pre><code>$ su
# vi /var/lib/redmine_a/config/database.yml</code></pre>
<pre><code>production:
  adapter: postgresql
  database: redmine_a_db
  host: localhost          ※ 127.0.0.1 でないとダメな場合がある？
  username: redmine_a_user
  password: "redmine_a_pass"
  encoding: utf8</code></pre>
      </section>
      <section>
        <h1>設定ファイル config/configuration.ymlの作成</h1>
<pre><code>$ su
# vi /var/lib/redmine_a/config/configuration.yml</code></pre>
<pre><code>production:
  email_delivery:
    delivery_method: :smtp
    smtp_settings:
      address: "localhost"
      port: 25
      domain: "example.com"

  rmagick_font_path: /usr/share/fonts/ipa-pgothic/ipagp.ttf</code></pre>
      </section>
      <section>
        <h1>gemパッケージのインストール</h1>
<pre><code>$ cd /var/lib/redmine_a
$ export PATH=$PATH:/usr/local/pgsql/bin
$ bundle install --without development test --path vendor/bundle</code></pre>
      </section>
      <section>
        <h1>Redmineの初期設定と初期データ登録</h1>
<pre><code>$ cd /var/lib/redmine_a
$ bundle exec rake generate_secret_token</code></pre>
<pre><code>$ RAILS_ENV=production bundle exec rake db:migrate</code></pre>
<pre><code>$ RAILS_ENV=production REDMINE_LANG=ja bundle exec rake redmine:load_default_data</code></pre>
      </section>
      <section>
        <h1>Apache上のPassengerでRedmineを実行するための設定</h1>
<pre><code>$ su
# chown -R apache:apache /var/lib/redmine_a</code></pre>
      </section>
      <section>
        <h1>Apacheへの設定追加およびApacheの再起動</h1>
<pre><code>$ su
# vi /usr/local/apache2/conf/extra/redmine.conf</code></pre>
<pre><code># Redmineの画像ファイル・CSSファイル等へのアクセスを許可する設定。
# Apache 2.4のデフォルトではサーバ上の全ファイルへのアクセスが禁止されている。
&lt;Directory "/var/lib/redmine_a/public"&gt;
  Require all granted
&lt;/Directory&gt;
RackBaseURI /redmine_a

Alias /redmine_a /var/lib/redmine_a/public
&lt;Location /redmine_a&gt;
  PassengerBaseURI /redmine_a
  PassengerAppRoot /var/lib/redmine_a
&lt;/Location&gt;</code></pre>
        <p>Apache再起動</p>
<pre><code># /usr/local/apache2/bin/apachectl configtest
# systemctl restart httpd</code></pre>
      </section>
    </section>
    <section>
      <h1>バックアップについて</h1>
      <p>バックアップ対象は物理的なファイルとDBダンプ、リポジトリダンプ。</p>
      <p>物理的な対象ファイルの位置(*が付いているファイル/ディレクトリが対象)</p>
<pre><code>/
  var/
    lib/
      redmine_a/
        files/ *
        public/
          download/ *
        config/
          database.yml *
          configuration.yml *
      svn/
        repos/
          repo1/
            conf/ *
            hooks/
              post-commit *
      git/
        repos/
          repo1/ (調査中)
      pgsql/
        data/
          pg_hba.conf *
  usr/
    local/
      apache2/
        conf/
          httpd.conf *
          extra/
            svn.conf *
            git.conf *
            passenger.conf *
            redmine.conf *
      lib/
        systemd/
          system/
            httpd.service *
            postgres.service *</code></pre>
      <p>DBダンプ</p>
      <p>以下のコマンドを実行</p>
<pre><code>PGPASSWORD=redmine_a_pass /usr/bin/pg_dump -h localhost -U redmine_a_user -f ./redmine_a_db.sqlc redmine_a_db</code></pre>
      <p>リポジトリをダンプ</p>
      <p>以下のコマンドを実行</p>
<pre><code>/usr/bin/svnadmin dump -q /var/lib/svn/repos/fs &gt; ./fs.svndump</code></pre>
      <p>バックアップイメージ(考え中)</p>
<pre><code>/backup/
  backup_YYYY-MM-DD/
    redmine/
      config/
        database.yml
        configuration.yml
      files/
        ..
       public/
         download/
          ..
     redmine_a_db.sqlc
    svn/
      fs/
        fs.svndump
        conf/
          authz
          passwd
          svnserve.conf
        hooks/
          ..
    httpd/
      conf.d/
        redmine.conf
        svn.conf</code></pre>
    </section>
    <hr />
    <footer>
      <address>2019-05-22更新<br /><abbr title="Copyright">&#169;</abbr>2008, b_type. E-mail: b_type&#64;hotmail.co.jp</address>
    </footer>
  </body>
</html>
